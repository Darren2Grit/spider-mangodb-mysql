<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-5.0.xsd
        http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-5.0.xsd
        ">

	<bean id="datasourcePool" abstract="true"
		class="com.alibaba.druid.pool.DruidDataSource" init-method="init"
		destroy-method="close">
		<property name="initialSize" value="${dbPool.initialSize}" />
		<property name="minIdle" value="${dbPool.minIdle}" />
		<property name="maxActive" value="${dbPool.maxActive}" />

		<property name="maxWait" value="${dbPool.maxWait}" />

		<property name="timeBetweenEvictionRunsMillis" value="${dbPool.timeBetweenEvictionRunsMillis}" />

		<property name="minEvictableIdleTimeMillis" value="${dbPool.minEvictableIdleTimeMillis}" />

		<property name="validationQuery" value="${dbPool.validationQuery}" />
		<property name="testWhileIdle" value="${dbPool.testWhileIdle}" />
		<property name="testOnBorrow" value="${dbPool.testOnBorrow}" />
		<property name="testOnReturn" value="${dbPool.testOnReturn}" />

		<property name="poolPreparedStatements" value="${dbPool.poolPreparedStatements}" />
		<property name="maxPoolPreparedStatementPerConnectionSize"
			value="${dbPool.maxPoolPreparedStatementPerConnectionSize}" />

		<property name="filters" value="${dbPool.filters}" />
	</bean>

	<bean id="dataSource" parent="datasourcePool">
		<property name="driverClassName" value="${mysql.jdbc.driverClassName}" />
		<property name="url" value="${mysql.jdbc.url}" />
		<property name="username" value="${mysql.jdbc.username}" />
		<property name="password" value="${mysql.jdbc.password}" />
	</bean>

	<bean id="sqlSessionFactory"
		class="com.baomidou.mybatisplus.extension.spring.MybatisSqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<!-- 自动扫描mapping.xml文件，**表示迭代查找,也可在sqlMapConfig.xml中单独指定xml文件 -->
		<property name="configLocation" value="classpath:mybatis/mybatis-config.xml" />
		<property name="mapperLocations" value="classpath:mybatis/mapper/*.xml" />
		<property name="typeAliasesPackage" value="cn.xueyuetang.questionspider.entity" />
	</bean>

	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="basePackage" value="cn.xueyuetang.questionspider.dao" />
		<property name="sqlSessionFactoryBeanName" value="sqlSessionFactory" />
	</bean>

	<bean id="txManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource" />
	</bean>

	<!-- 开启事务注解驱动 -->
	<tx:annotation-driven transaction-manager="txManager" />

</beans>